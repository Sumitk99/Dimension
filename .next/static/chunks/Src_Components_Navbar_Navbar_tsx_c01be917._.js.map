{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiva/OneDrive/Desktop/Assignment/my-app/Src/Components/Navbar/Navbar.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const navLinks = [\r\n    { name: 'Home', href: '/' },\r\n    { name: 'About', href: '/about' },\r\n    { name: 'Services', href: '/services' },\r\n    { name: 'Portfolio', href: '/portfolio' },\r\n    { name: 'Contact', href: '/contact' },\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"bg-white shadow-lg fixed w-full top-0 z-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center h-16\">\r\n          {/* Logo */}\r\n          <div className=\"flex-shrink-0 flex items-center\">\r\n            <Link href=\"/\" className=\"flex items-center space-x-2\">\r\n              <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-white font-bold text-sm\">L</span>\r\n              </div>\r\n              <span className=\"text-xl font-bold text-gray-900\">Logo</span>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* Desktop Navigation */}\r\n          <div className=\"hidden md:block\">\r\n            <div className=\"ml-10 flex items-baseline space-x-4\">\r\n              {navLinks.map((link) => (\r\n                <Link\r\n                  key={link.name}\r\n                  href={link.href}\r\n                  className=\"text-gray-700 hover:text-blue-600 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200\"\r\n                >\r\n                  {link.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* CTA Button */}\r\n          <div className=\"hidden md:block\">\r\n            <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\">\r\n              Get Started\r\n            </button>\r\n          </div>\r\n\r\n          {/* Mobile menu button */}\r\n          <div className=\"md:hidden\">\r\n            <button\r\n              onClick={toggleMenu}\r\n              className=\"text-gray-700 hover:text-blue-600 focus:outline-none focus:text-blue-600\"\r\n              aria-label=\"Toggle menu\"\r\n            >\r\n              <svg\r\n                className=\"h-6 w-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                {isMenuOpen ? (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M6 18L18 6M6 6l12 12\"\r\n                  />\r\n                ) : (\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M4 6h16M4 12h16M4 18h16\"\r\n                  />\r\n                )}\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Navigation */}\r\n      {isMenuOpen && (\r\n        <div className=\"md:hidden\">\r\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white shadow-lg\">\r\n            {navLinks.map((link) => (\r\n              <Link\r\n                key={link.name}\r\n                href={link.href}\r\n                className=\"text-gray-700 hover:text-blue-600 block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200\"\r\n                onClick={() => setIsMenuOpen(false)}\r\n              >\r\n                {link.name}\r\n              </Link>\r\n            ))}\r\n            <div className=\"pt-4 pb-3 border-t border-gray-200\">\r\n              <button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\">\r\n                Get Started\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMA,MAAM,SAAS;;IACb,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,MAAM,aAAa;QACjB,cAAc,CAAC;IACjB;IAEA,MAAM,WAAW;QACf;YAAE,MAAM;YAAQ,MAAM;QAAI;QAC1B;YAAE,MAAM;YAAS,MAAM;QAAS;QAChC;YAAE,MAAM;YAAY,MAAM;QAAY;QACtC;YAAE,MAAM;YAAa,MAAM;QAAa;QACxC;YAAE,MAAM;YAAW,MAAM;QAAW;KACrC;IAED,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;;kDACvB,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDAA+B;;;;;;;;;;;kDAEjD,6LAAC;wCAAK,WAAU;kDAAkC;;;;;;;;;;;;;;;;;sCAKtD,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAU;kDAET,KAAK,IAAI;uCAJL,KAAK,IAAI;;;;;;;;;;;;;;;sCAWtB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAO,WAAU;0CAAmH;;;;;;;;;;;sCAMvI,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCACC,SAAS;gCACT,WAAU;gCACV,cAAW;0CAEX,cAAA,6LAAC;oCACC,WAAU;oCACV,MAAK;oCACL,SAAQ;oCACR,QAAO;8CAEN,2BACC,6LAAC;wCACC,eAAc;wCACd,gBAAe;wCACf,aAAa;wCACb,GAAE;;;;;iGAGJ,6LAAC;wCACC,eAAc;wCACd,gBAAe;wCACf,aAAa;wCACb,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUf,4BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;wBACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAU;gCACV,SAAS,IAAM,cAAc;0CAE5B,KAAK,IAAI;+BALL,KAAK,IAAI;;;;;sCAQlB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAO,WAAU;0CAA0H;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS1J;GA7GM;KAAA;uCA+GS","debugId":null}}]
}